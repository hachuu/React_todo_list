{"version":3,"sources":["components/TodoList/TodoListTemplate.js","components/Form/Form.js","components/TodoItem/TodoItem.js","components/TodoItemList/TodoItemList.js","components/Palette/Palette.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","palette","children","today","Date","year","getFullYear","month","getMonth","day","getDate","todate","className","Form","value","color","onChange","onCreate","onKeyPress","style","onClick","TodoItem","nextProps","nextState","this","props","checked","text","id","onToggle","onRemove","e","stopPropagation","Component","TodoItemList","todos","todoList","map","Color","active","background","Palette","colors","selected","onSelect","colorList","App","state","input","handleChange","setState","target","handleCreate","concat","alert","handleKeyPress","key","handleToggle","index","findIndex","todo","nextTodos","handleRemove","filter","handleSelectColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dd3d0bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({form, palette, children}) => {\r\n\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = (1 + today.getMonth() >= 10 ? 1 + today.getMonth() : `0${1 + today.getMonth()}`);\r\n  const day = today.getDate() >= 10 ? today.getDate() : `0${today.getDate()}`;\r\n  const todate = `${year}/${month}/${day}`;\r\n\r\n  return (\r\n    <main className=\"todo-list-template\">\r\n      <div className=\"title\">\r\n        {todate} To do List\r\n      </div>\r\n      <section className=\"palette-wrapper\">\r\n        {palette}\r\n      </section>\r\n      <section className=\"form-wrapper\">\r\n        {form}\r\n      </section>\r\n      <section className=\"todos-wrapper\">\r\n        { children }\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({value, color, onChange, onCreate, onKeyPress}) => {\r\n  return (\r\n    <div className=\"form\">\r\n      <input value={value} onChange={onChange} onKeyPress={onKeyPress} style={{color}}/>\r\n      <div className=\"create-button\" onClick={onCreate}>\r\n        추가\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport './TodoItem.css';\r\n\r\nclass TodoItem extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.checked !== nextProps.checked;\r\n  }\r\n\r\n  render() {\r\n    const { text, checked, id, color, onToggle, onRemove } = this.props;\r\n\r\n    return (\r\n      <div className=\"todo-item\" onClick={() => onToggle(id)}>\r\n        <div className=\"remove\" onClick={(e) => {\r\n          e.stopPropagation(); // onToggle 이 실행되지 않도록 함\r\n          onRemove(id)}\r\n        }>&times;</div>\r\n        <div style={{ color }} className={`todo-text ${checked && 'checked'}`}>\r\n          <div>{text}</div>\r\n        </div>\r\n        {\r\n          checked && (<div className=\"check-mark\">&#x2713;</div>)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './../TodoItem/TodoItem';\r\n\r\nclass TodoItemList extends Component {\r\n  \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.todos !== nextProps.todos;\r\n  }\r\n\r\n  render() {\r\n    const { todos, onToggle, onRemove } = this.props;\r\n\r\n    const todoList = todos.map(\r\n      ({id, text, checked, color}) => (\r\n        <TodoItem\r\n          id={id}\r\n          text={text}\r\n          checked={checked}\r\n          color={color}\r\n          onToggle={onToggle}\r\n          onRemove={onRemove}\r\n          key={id}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {todoList}    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;","import React, { Component } from 'react';\r\nimport './Palette.css';\r\n\r\nconst Color = ({ color, active, onClick }) => {\r\n    return (\r\n        <div className={`color ${active && 'active'}`} style={{ background: color}} onClick={onClick}>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Palette = ({colors, selected, onSelect}) => {\r\n    const colorList = colors.map(\r\n      (color) => (<Color color={color} active={selected===color} onClick={() => onSelect(color)} key={color}/>)\r\n    );\r\n    return (\r\n      <div className=\"palette\">\r\n        {colorList}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Palette;","import React, { Component } from 'react';\r\nimport TodoListTemplate from './components/TodoList/TodoListTemplate';\r\nimport Form from './components/Form/Form';\r\nimport TodoItemList from './components/TodoItemList/TodoItemList';\r\nimport Palette from './components/Palette/Palette';\r\n\r\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6'];\r\n\r\nclass App extends Component {\r\n  \r\n  state = {\r\n    input: '',\r\n    todos: [\r\n      { id: 0, text: '메일 확인', checked: false },\r\n      { id: 1, text: '레드마인 확인', checked: false },\r\n      { id: 2, text: '영어단어 정리', checked: false },\r\n      { id: 3, text: 'GitHub 체크', checked: false }\r\n    ],\r\n  }\r\n  id = 4;\r\n  \r\n  handleChange = (e) => {\r\n    this.setState({\r\n      input: e.target.value // input 의 다음 바뀔 값\r\n    });\r\n  }\r\n\r\n  handleCreate = () => {\r\n    const { input, todos, color } = this.state;\r\n    if (!!input) {\r\n      this.setState({\r\n        input: '', // 인풋 비우고\r\n        // concat 을 사용하여 배열에 추가\r\n        todos: todos.concat({\r\n          id: this.id++,\r\n          text: input,\r\n          checked: false,\r\n          color\r\n        })\r\n      });\r\n    } else {\r\n      alert('input에 입력값을 넣어주세요');\r\n    }\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    // 눌려진 키가 Enter 면 handleCreate 호출\r\n    if(e.key === 'Enter') {\r\n      this.handleCreate();\r\n    }\r\n  }\r\n\r\n  handleToggle = (id) => {\r\n    const { todos } = this.state;\r\n\r\n    // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\r\n    const index = todos.findIndex(todo => todo.id === id);\r\n    const selected = todos[index]; // 선택한 객체\r\n\r\n    const nextTodos = [...todos]; // 배열을 복사\r\n\r\n    // 기존의 값들을 복사하고, checked 값을 덮어쓰기\r\n    nextTodos[index] = { \r\n      ...selected, \r\n      checked: !selected.checked\r\n    };\r\n\r\n    this.setState({\r\n      todos: nextTodos\r\n    });\r\n  }\r\n\r\n  handleRemove = (id) => {\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: todos.filter(todo => todo.id !== id)\r\n    });\r\n  }\r\n\r\n  handleSelectColor = (color) => {\r\n    this.setState({\r\n      color\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { input, todos, color } = this.state;\r\n    const {\r\n      handleChange,\r\n      handleCreate,\r\n      handleKeyPress,\r\n      handleToggle,\r\n      handleRemove,\r\n      handleSelectColor\r\n    } = this;\r\n\r\n    return (\r\n      <TodoListTemplate form={(\r\n        <Form \r\n          value={input}\r\n          color={color}\r\n          onKeyPress={handleKeyPress}\r\n          onChange={handleChange}\r\n          onCreate={handleCreate}\r\n        />\r\n      )}\r\n        palette={(\r\n          <Palette colors={colors} selected={color} onSelect={handleSelectColor}/>\r\n        )}>\r\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\r\n      </TodoListTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}