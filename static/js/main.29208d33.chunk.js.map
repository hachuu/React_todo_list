{"version":3,"sources":["components/TodoList/TodoListTemplate.js","components/Form/Form.js","components/TodoItem/TodoItem.js","components/TodoItemList/TodoItemList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","children","today","Date","year","getFullYear","month","getMonth","day","getDate","todate","className","Form","value","onChange","onCreate","onKeyPress","onClick","TodoItem","nextProps","nextState","this","props","checked","text","id","onToggle","onRemove","e","stopPropagation","Component","TodoItemList","todos","todoList","map","todo","key","App","state","input","handleChange","setState","target","handleCreate","concat","handleKeyPress","handleToggle","index","findIndex","selected","nextTodos","handleRemove","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29208d33.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({form, children}) => {\r\n\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = (1 + today.getMonth() >= 10 ? 1 + today.getMonth() : `0${1 + today.getMonth()}`);\r\n  const day = today.getDate() >= 10 ? today.getDate() : `0${today.getDate()}`;\r\n  const todate = `${year}/${month}/${day}`;\r\n\r\n  return (\r\n    <main className=\"todo-list-template\">\r\n      <div className=\"title\">\r\n        {todate} To do List\r\n      </div>\r\n      <section className=\"form-wrapper\">\r\n        {form}\r\n      </section>\r\n      <section className=\"todos-wrapper\">\r\n        { children }\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({value, onChange, onCreate, onKeyPress}) => {\r\n  return (\r\n    <div className=\"form\">\r\n      <input value={value} onChange={onChange} onKeyPress={onKeyPress}/>\r\n      <div className=\"create-button\" onClick={onCreate}>\r\n        추가\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport './TodoItem.css';\r\n\r\nclass TodoItem extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.checked !== nextProps.checked;\r\n  }\r\n\r\n  render() {\r\n    const { text, checked, id, onToggle, onRemove } = this.props;\r\n\r\n    return (\r\n      <div className=\"todo-item\" onClick={() => onToggle(id)}>\r\n        <div className=\"remove\" onClick={(e) => {\r\n          e.stopPropagation(); // onToggle 이 실행되지 않도록 함\r\n          onRemove(id)}\r\n        }>&times;</div>\r\n        <div className={`todo-text ${checked && 'checked'}`}>\r\n          <div>{text}</div>\r\n        </div>\r\n        {\r\n          checked && (<div className=\"check-mark\">✓</div>)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './../TodoItem/TodoItem';\r\n\r\nclass TodoItemList extends Component {\r\n  render() {\r\n    const { todos, onToggle, onRemove } = this.props;\r\n\r\n    const todoList = todos.map(\r\n      (todo) => (\r\n        <TodoItem\r\n          {...todo}\r\n          onToggle={onToggle}\r\n          onRemove={onRemove}\r\n          key={todo.id}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {todoList}    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;","import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoList/TodoListTemplate';\nimport Form from './components/Form/Form';\nimport TodoItemList from './components/TodoItemList/TodoItemList';\n\nclass App extends Component {\n  \n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: ' 메일 확인', checked: false },\n      { id: 1, text: ' 레드마인 확인', checked: false },\n      { id: 2, text: ' 영어단어 정리', checked: false },\n      { id: 3, text: ' GitHub 체크', checked: false }\n    ]\n  }\n  id = 4;\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value // input 의 다음 바뀔 값\n    });\n  }\n\n  handleCreate = () => {\n    const { input, todos } = this.state;\n    this.setState({\n      input: '', // 인풋 비우고\n      // concat 을 사용하여 배열에 추가\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false\n      })\n    });\n  }\n\n  handleKeyPress = (e) => {\n    // 눌려진 키가 Enter 면 handleCreate 호출\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) => {\n    const { todos } = this.state;\n\n    // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; // 선택한 객체\n\n    const nextTodos = [...todos]; // 배열을 복사\n\n    // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n    nextTodos[index] = { \n      ...selected, \n      checked: !selected.checked\n    };\n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  render() {\n    const { input, todos } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove\n    } = this;\n\n    return (\n      <TodoListTemplate form={(\n        <Form \n          value={input}\n          onKeyPress={handleKeyPress}\n          onChange={handleChange}\n          onCreate={handleCreate}\n        />\n      )}>\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}