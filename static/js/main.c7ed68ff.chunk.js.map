{"version":3,"sources":["components/Palette/Palette.js","components/TodoList/TodoListTemplate.js","components/Form/Form.js","components/TodoItem/TodoItem.js","components/TodoItemList/TodoItemList.js","App.js","reportWebVitals.js","index.js"],"names":["Palette","this","props","colors","onChange","colorList","map","color","className","key","id","style","Object","assign","value","Component","TodoListTemplate","form","children","today","Date","year","getFullYear","month","getMonth","day","getDate","todate","Form","onCreate","onKeyPress","onClick","TodoItem","nextProps","nextState","checked","text","onToggle","onRemove","e","stopPropagation","TodoItemList","todos","todoList","todo","App","state","input","handleChange","setState","target","handleCreate","concat","handleKeyPress","handleToggle","index","findIndex","selected","nextTodos","handleRemove","filter","handleColor","colour","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7ed68ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Palette extends Component {\r\n    render() {\r\n        const { colors, onChange } = this.props;\r\n        const colorList = colors.map(\r\n            (color) => (\r\n                <option className=\"color\"\r\n                    {...color}\r\n                    key={color.id}\r\n                    style={Object.assign({color: color.value})}\r\n                >\r\n                    선택 색상 {color.value} ★\r\n                </option>\r\n            )\r\n        );\r\n        return (\r\n            <select onChange={onChange}>\r\n                {colorList}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Palette;","import React from 'react';\r\nimport Palette from '../Palette/Palette';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({form, children, onChange}) => {\r\n\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = (1 + today.getMonth() >= 10 ? 1 + today.getMonth() : `0${1 + today.getMonth()}`);\r\n  const day = today.getDate() >= 10 ? today.getDate() : `0${today.getDate()}`;\r\n  const todate = `${year}/${month}/${day}`;\r\n  const colors = [\r\n    { id: 0, value: '#343a40'}, \r\n    { id: 1, value: '#f03e3e'}, \r\n    { id: 2, value: '#12b886'},\r\n    { id: 3, value: '#228ae6'}\r\n  ];\r\n\r\n  return (\r\n    <main className=\"todo-list-template\">\r\n      <div className=\"title\">\r\n        {todate} To do List\r\n      </div>\r\n      <Palette colors={colors} onChange={onChange}></Palette>\r\n      <section className=\"form-wrapper\">\r\n        {form}\r\n      </section>\r\n      <section className=\"todos-wrapper\">\r\n        { children }\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({value, color, onChange, onCreate, onKeyPress}) => {\r\n  return (\r\n    <div className=\"form\">\r\n      <input value={value} onChange={onChange} onKeyPress={onKeyPress} style={Object.assign({color: color})}/>\r\n      <div className=\"create-button\" onClick={onCreate}>\r\n        추가\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport './TodoItem.css';\r\n\r\nclass TodoItem extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.checked !== nextProps.checked;\r\n  }\r\n\r\n  render() {\r\n    const { text, checked, id, onToggle, onRemove } = this.props;\r\n\r\n    return (\r\n      <div className=\"todo-item\" onClick={() => onToggle(id)}>\r\n        <div className=\"remove\" onClick={(e) => {\r\n          e.stopPropagation(); // onToggle 이 실행되지 않도록 함\r\n          onRemove(id)}\r\n        }>&times;</div>\r\n        <div className={`todo-text ${checked && 'checked'}`}>\r\n          <div>{text}</div>\r\n        </div>\r\n        {\r\n          checked && (<div className=\"check-mark\">✓</div>)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './../TodoItem/TodoItem';\r\n\r\nclass TodoItemList extends Component {\r\n  render() {\r\n    const { todos, onToggle, onRemove } = this.props;\r\n\r\n    const todoList = todos.map(\r\n      (todo) => (\r\n        <TodoItem\r\n          {...todo}\r\n          onToggle={onToggle}\r\n          onRemove={onRemove}\r\n          key={todo.id}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {todoList}    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;","import React, { Component } from 'react';\r\nimport TodoListTemplate from './components/TodoList/TodoListTemplate';\r\nimport Form from './components/Form/Form';\r\nimport TodoItemList from './components/TodoItemList/TodoItemList';\r\n\r\nclass App extends Component {\r\n  \r\n  state = {\r\n    input: '',\r\n    todos: [\r\n      { id: 0, text: '메일 확인', checked: false },\r\n      { id: 1, text: '레드마인 확인', checked: false },\r\n      { id: 2, text: '영어단어 정리', checked: false },\r\n      { id: 3, text: 'GitHub 체크', checked: false }\r\n    ],\r\n    color: ''\r\n  }\r\n  id = 4;\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      input: e.target.value // input 의 다음 바뀔 값\r\n    });\r\n  }\r\n\r\n  handleCreate = () => {\r\n    const { input, todos } = this.state;\r\n    this.setState({\r\n      input: '', // 인풋 비우고\r\n      // concat 을 사용하여 배열에 추가\r\n      todos: todos.concat({\r\n        id: this.id++,\r\n        text: input,\r\n        checked: false\r\n      })\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    // 눌려진 키가 Enter 면 handleCreate 호출\r\n    if(e.key === 'Enter') {\r\n      this.handleCreate();\r\n    }\r\n  }\r\n\r\n  handleToggle = (id) => {\r\n    const { todos } = this.state;\r\n\r\n    // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\r\n    const index = todos.findIndex(todo => todo.id === id);\r\n    const selected = todos[index]; // 선택한 객체\r\n\r\n    const nextTodos = [...todos]; // 배열을 복사\r\n\r\n    // 기존의 값들을 복사하고, checked 값을 덮어쓰기\r\n    nextTodos[index] = { \r\n      ...selected, \r\n      checked: !selected.checked\r\n    };\r\n\r\n    this.setState({\r\n      todos: nextTodos\r\n    });\r\n  }\r\n\r\n  handleRemove = (id) => {\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: todos.filter(todo => todo.id !== id)\r\n    });\r\n  }\r\n\r\n  handleColor = (colour) => {\r\n    const { color } = this.state;\r\n    this.setState({\r\n      color: colour.target.value\r\n    });\r\n    console.log(colour.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { input, todos, color } = this.state;\r\n    const {\r\n      handleChange,\r\n      handleCreate,\r\n      handleKeyPress,\r\n      handleToggle,\r\n      handleRemove,\r\n      handleColor\r\n    } = this;\r\n\r\n    return (\r\n      <TodoListTemplate form={(\r\n        <Form \r\n          value={input}\r\n          color={color}\r\n          onKeyPress={handleKeyPress}\r\n          onChange={handleChange}\r\n          onCreate={handleCreate}\r\n        />\r\n      )} onChange={handleColor}>\r\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\r\n      </TodoListTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}